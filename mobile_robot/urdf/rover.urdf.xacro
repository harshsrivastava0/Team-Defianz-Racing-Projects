<?xml version="1.0"?>
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="rover">
    

    <!-- Properties-->
    <xacro:property name="base_mass" value="1.0"/>
    <xacro:property name="base_constant" value="0.083333"/>
    <xacro:property name="base_width" value="0.8"/>
    <xacro:property name="base_height" value="0.1"/>
    <xacro:property name="base_depth" value="0.7"/>

    <xacro:property name="wheel_mass" value="0.5"/>
    <xacro:property name="wheel_constant" value="0.083333"/>
    <xacro:property name="wheel_radius" value="0.164"/>
    <xacro:property name="wheel_height" value="0.1"/>
    

    <!-- Macros-->
    <xacro:macro name="wheel" params="name x y mesh">
        <link name="wheel_${name}_link">
            <inertial>
                <origin xyz="0.0 0.0 0.0" rpy="1.57079632 0.0 0.0"/>
                <mass value="0.5"/>
                <inertia ixx="${wheel_constant * wheel_mass * ((3.0*wheel_radius*wheel_radius) + (wheel_height*wheel_height))}" ixy="0.0" ixz="0.0"
                iyy="${wheel_constant * wheel_mass * ((3.0*wheel_radius*wheel_radius) + (wheel_height*wheel_height))}" iyz="0.0"
                izz="${0.5 * wheel_mass * wheel_radius * wheel_radius}"/>
            </inertial>
            <visual>
                <origin xyz="0.0 0.0 0.0" rpy="1.57079632 0.0 0.0"/>
                <geometry>
                    <cylinder radius="0.164" length="0.1"/>
                </geometry>
                <material name="black">
                    <color rgba="0.0 0.0 0.0 1.0"/>
                </material>
            </visual>
            <collision>
                <origin xyz="0.0 0.0 0.0" rpy="1.57079632 0.0 0.0"/>
                <geometry>
                    <cylinder radius="0.164" length="0.1"/>
                </geometry>
            </collision>
        </link>
        <gazebo reference ="wheel_${name}_link">
            <mu1 value="1.0"/>
            <mu2 value="1.0"/>
            <kp  value="10000000.0" />
            <kd  value="1.0" />
            <fdir1 value="1 0 0"/>
            <material>Gazebo/Grey</material>
            <turnGravityOff>false</turnGravityOff>
        </gazebo>
    
        <joint name="wheel_${name}_joint" type="continuous">
            <origin xyz="${x} ${y} 0.0" rpy="0.0 0.0 0.0"/>
            <parent link="base_link"/>
            <child link="wheel_${name}_link"/>
            <axis xyz="0.0 1.0 0.0"/>
        </joint>  

        <!-- Transmission is important to link the joints and the controller -->
        <transmission name="wheel_${name}_joint_trans">
            <type>transmission_interface/SimpleTransmission</type>
            <joint name="wheel_${name}_joint" />
            <actuator name="wheel_${name}_joint_motor">
                <hardwareInterface>EffortJointInterface</hardwareInterface>
                <mechanicalReduction>1</mechanicalReduction>
            </actuator>
        </transmission>
    </xacro:macro>


    <!-- Main Robot-->

    <link name="base_footprint">
        
    </link>

    <link name="base_link">
        <inertial>
            <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
            <mass value="1.0"/>
            <inertia ixx="${base_constant * base_mass * (base_height*base_height + base_depth*base_depth)}" ixy="0.0" ixz="0.0" 
            iyy="${base_constant * base_mass * (base_width*base_width + base_height*base_height)}" iyz="0.0" 
            izz="${base_constant * base_mass * (base_width*base_width + base_depth*base_depth)}"/>
        </inertial>
        <visual>
            <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
            <geometry>
                <box size="0.8 0.7 0.1"/>
            </geometry>
            <material name="">
                <color rgba="1.0 0.0 0.0 1.0"/>
                <texture filename=""/>
            </material>
        </visual>
        <collision>
            <origin xyz="0.0 0.0 0.0" rpy="0.0 0.0 0.0"/>
            <geometry>
                <box size="0.8 0.7 0.1"/>
            </geometry>
        </collision>
    </link>
<!-- Adding movement to the robot-->

    <!-- ROS control plugins-->
    <gazebo>
        <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
            <robotNamespace>/rover</robotNamespace>
        </plugin>
    </gazebo>

    <!-- Differential Drive controllers-->
    <gazebo>
        <plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">
            <rosDebugLevel>Debug</rosDebugLevel>
            <publishWheelTF>true</publishWheelTF>
            <robotNamespace></robotNamespace>
            <publishTf>1</publishTf>
            <publishWheelJointState>true</publishWheelJointState>
            <alwaysOn>true</alwaysOn>
            <updateRate>100.0</updateRate>
            <leftJoint>wheel_front_left_joint</leftJoint>
            <rightJoint>wheel_front_right_joint</rightJoint>
            <wheelSeparation>0.5</wheelSeparation>
            <wheelDiameter>${2*wheel_radius}</wheelDiameter>
            <broadcastTF>1</broadcastTF>
            <wheelTorque>30</wheelTorque>
            <wheelAcceleration>1.8</wheelAcceleration>
            <commandTopic>cmd_vel</commandTopic>
            <odometryFrame>odom</odometryFrame>
            <odometryTopic>odom</odometryTopic>
            <odometrySource>1</odometrySource>
            <robotBaseFrame>base_footprint</robotBaseFrame>
            <legacyMode>false</legacyMode>
        </plugin>
    </gazebo>
    <joint name="base_joint" type="fixed">
        <origin xyz="0.0 0.0 0.135" rpy="0.0 0.0 0.0"/>
        <parent link="base_footprint"/>
        <child link="base_link"/>
    </joint>

    <!--Rear right wheel-->
    <xacro:wheel name="rear_right" x="0.25" y="0.4" mesh="right_tire.stl"/>


    <!--Rear left wheel-->
    <xacro:wheel name="rear_left" x="0.25" y="-0.4" mesh="left_tire.stl"/>    


    <!--Front right wheel-->
    <xacro:wheel name="front_right" x="-0.25" y="0.4" mesh="right_tire.stl"/>

    <!--Front left wheel-->
    <xacro:wheel name="front_left" x="-0.25" y="-0.4" mesh="left_tire.stl"/>


    <!-- Gazebo Colors-->
    <gazebo reference ="base_link">
        <material>Gazebo/Red</material>
    </gazebo>
    


    <!-- Adding movement to the robot-->

    <!-- ROS control plugins-->
    <gazebo>
        <plugin name="gazebo_ros_control" filename="libgazebo_ros_control.so">
            <robotNamespace>/rover</robotNamespace>
        </plugin>
    </gazebo>

    <!-- Differential Drive controllers-->
    <gazebo>
        <plugin name="differential_drive_controller" filename="libgazebo_ros_diff_drive.so">
            <rosDebugLevel>Debug</rosDebugLevel>
            <publishWheelTF>true</publishWheelTF>
            <robotNamespace></robotNamespace>
            <publishTf>1</publishTf>
            <publishWheelJointState>true</publishWheelJointState>
            <alwaysOn>true</alwaysOn>
            <updateRate>100.0</updateRate>
            <leftJoint>wheel_front_left_joint</leftJoint>
            <rightJoint>wheel_front_right_joint</rightJoint>
            <wheelSeparation>0.5</wheelSeparation>
            <wheelDiameter>${2*wheel_radius}</wheelDiameter>
            <broadcastTF>1</broadcastTF>
            <wheelTorque>30</wheelTorque>
            <wheelAcceleration>1.8</wheelAcceleration>
            <commandTopic>cmd_vel</commandTopic>
            <odometryFrame>odom</odometryFrame>
            <odometryTopic>odom</odometryTopic>
            <odometrySource>1</odometrySource>
            <robotBaseFrame>base_footprint</robotBaseFrame>
            <legacyMode>false</legacyMode>
        </plugin>
    </gazebo>

    <!-- Transmission macros-->



</robot>